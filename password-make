pass = fs.open("Panther/UserData/password.urd","w")
print("Enter password")
term.setCursorBlink(true)
passInput = read()

local charSize = 255
local amplitude = charSize/math.pi
local frequency = math.pi/charSize*8

function MDOA1(x)
	return math.ceil(amplitude * math.sin(frequency * x) + (amplitude*(math.cos(x) % 9)))
end
function stringToInt(input)
	if type(input) == "number" then
		return input
	elseif type(input) == "string" then
		output = 0
		for x = 1, #input do
			output = output + input:byte(x)
		end
		
		return output
	else
		return 0
	end
end
function encrypt(input, key)
	key = stringToInt(key)
	
	local output = ""
	for x = 1, #input do
		output = output .. string.char((input:byte(x) + MDOA1(x + key)) % charSize)
	end
	
	return output
end

print(encrypt(passInput))
pass.write(encrypt(passInput,"panther-apricot-password-format"))
pass.close()