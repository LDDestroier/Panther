if fs.exists("Panther/SystemCache/UserLogonInfo.inf") then
	fs.delete("Panther/SystemCache/UserLogonInfo.inf")
end

local logprint = function(text)
	return print(textutils.formatTime(os.time(),true).."> "..text)
end

if peripheral.find("monitor") then
	mon = peripheral.find("monitor")
	local scaleF = fs.open("Panther/UserData/monscale.urd","r")
	scale = tonumber(scaleF.readAll())
	scaleF.close()
	mon.setTextScale(scale)
end

logprint("Panther is booting")
logprint("Checking if advanced...")
if term.isColor() then
	logprint("Checking version...")
	logprint("Version: "..os.version())
	if os.version() == "CraftOS 1.7" or os.version() == "CraftOS 1.8" then
		logprint("Version OK.")
	else
		
		write("WARNING > Panther may crash because some functions may be nil. Please update ComputerCraft to 1.7 or 1.8")
		local waitTime = 10
		local x, y = term.getCursorPos()
		while waitTime ~= 0 do
			waitTime = waitTime - 1
			
			term.setCursorPos(x,y)
			logprint("Resuming in "..waitTime)
			sleep(1)
		end
	end
	logprint("Checking for monitor...")
	if peripheral.find("monitor") then
		logprint("Monitor found.")
		local function find( _type )
			for _, name in ipairs( peripheral.getNames() ) do
				if peripheral.getType( name ) == _type then
					return name
				end
			end
		end
		monitor = find("monitor")
		logprint("Monitor side: "..monitor)
		logprint(" Running boot.sys on monitor "..monitor)
		shell.run("monitor",monitor,"Panther/System/Boot.sys")
	else
		logprint("No monitor found.")
	end
	logprint("Ready for boot.")
	sleep(0.2)
	shell.run("Panther/System/Boot.sys")
else
	logprint("Panther failed to boot!")
	logprint("Cause: using regular computer")
	logprint("Panther requires a Advanced computer to run.")
end