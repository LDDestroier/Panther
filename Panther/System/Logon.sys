function main()
local xs, ys = term.getSize() 
local version

local function playSound(sound)
	if os.version() == "CraftOS 1.8" then
		if peripheral.find("speaker") then
			speaker = peripheral.find("speaker")
			if sound == "startup" then
				speaker.playNote("chime",1,10)
				sleep(0.4)
				speaker.playNote("chime",1,7)
				sleep(0.1)
				speaker.playNote("chime",1,5)
				sleep(0.2)
				speaker.playNote("chime",1,3)
				sleep(0.3)
				speaker.playNote("chime",1,7)
				sleep(0.4)
				speaker.playNote("chime",1,10)
			elseif sound == "error" then
				speaker.playNote("bass",1,1)
			elseif sound == "logon" then
				speaker.playNote("bell",1,3)
				sleep(0.3)
				speaker.playNote("bell",1,7)
				sleep(0.3)
			end
		end
	end
end

local charSize = 255
local amplitude = charSize/math.pi
local frequency = math.pi/charSize*8

function MDOA1(x)
	return math.ceil(amplitude * math.sin(frequency * x) + (amplitude*(math.cos(x) % 9)))
end

function stringToInt(input)
	if type(input) == "number" then
		return input
	elseif type(input) == "string" then
		output = 0
		for x = 1, #input do
			output = output + input:byte(x)
		end
		
		return output
	else
		return 0
	end
end

function encrypt(input, key)
	key = stringToInt(key)
	
	local output = ""
	for x = 1, #input do
		output = output .. string.char((input:byte(x) + MDOA1(x + key)) % charSize)
	end
	
	return output
end


if fs.exists("Panther/SystemCache/version.syc") then
	local ver = fs.open("Panther/SystemCache/version.syc","r")
	version = ver.readAll()
	ver.close()
end

local function CenterText(text,y)
	local x,ny = term.getSize()
	term.setCursorPos(x/2-string.len(text)/2,y)
	write(text)
end

term.setBackgroundColor(colors.lightBlue)
term.clear()
local image = paintutils.loadImage("Panther/System/Images/Backgrounds/LogonBackground.img")
paintutils.drawImage(image,1,1)

local function drawLogon()

	paintutils.drawFilledBox(xs/2-12,ys/2-3,xs/2+12,ys/2+3,colors.white)
	term.setTextColor(colors.gray)
	CenterText("Enter Password",ys/2-2)
	paintutils.drawLine(xs/2-11,ys/2,xs/2+11,ys/2,colors.gray)
	term.setCursorPos(xs/2-11,ys/2)
	term.setCursorBlink(true)
	term.setBackgroundColor(colors.gray)
	term.setTextColor(colors.lightGray)
	CenterText(" Log in ",ys/2+2)
	term.setBackgroundColor(colors.lightBlue)
	term.setTextColor(colors.gray)
	CenterText("Panther Version "..tostring(version),ys-1)

	term.setCursorPos(xs/2-11,ys/2)
	term.setBackgroundColor(colors.gray)
	term.setTextColor(colors.lightGray)
	term.setCursorBlink(true)
	input = read("*")

end

term.setTextColor(colors.white)
term.setBackgroundColor(colors.lightBlue)
CenterText("Press any key to logon",ys/2)
playSound("startup")
passF = fs.open("Panther/UserData/password.urd","r")
pass = passF.readAll()

while true do
	e = {os.pullEvent()}
    if e[1] == "mouse_click" then
        if e[2] == 1 then
            if e[3] >= xs/2-string.len(" Log in ")/2 and e[3] <= xs/2+string.len(" Log in ")/2 and e[4] == math.floor(ys/2+2) then
                if pass == encrypt(input, "panther-apricot-password-format") then
					paintutils.drawLine(xs/2-11,ys/2,xs/2+11,ys/2,colors.white)
					term.setTextColor(colors.gray)
					CenterText("Welcome!",ys/2)
					local userLogonInfo = fs.open("Panther/SystemCache/UserLogonInfo.inf","a")
					userLogonInfo.close()
					passF.close()
					sleep(1)
					playSound("logon")
					
					shell.run("Panther/System/Desktop.sys")
				else
					paintutils.drawLine(xs/2-11,ys/2,xs/2+11,ys/2,colors.white)
					term.setTextColor(colors.red)
					playSound("error")
					CenterText("Password Incorrect",ys/2)
					passF.close()
					sleep(1)
					drawLogon()
				end
            end
		end
	elseif e[1] == "key" then
		if pass ~= "" then
			sleep()
			drawLogon()
		else
			term.setCursorPos(1,ys/2)
			term.clearLine()
			CenterText("Welcome!",ys/2)
			sleep(1)
			playSound("logon")
			local userLogonInfo = fs.open("Panther/SystemCache/UserLogonInfo.inf","a")
			userLogonInfo.close()
			passF.close()
			shell.run("Panther/System/Desktop.sys")
			
			
		end
	end
end
end

main()